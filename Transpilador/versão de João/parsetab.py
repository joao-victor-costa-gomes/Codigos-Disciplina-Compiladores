
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMENT DIVIDE EQUALS FALSE FLOAT IDENTIFIER LPAREN MINUS NUMBER OR PLUS PRINT RPAREN STRING TIMES TRUEstatements : statements statement\n                  | statementstatement : IDENTIFIER EQUALS expression\n                 | PRINT LPAREN expression RPARENstatement : COMMENTexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression AND term\n                  | expression OR termexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBER\n              | FLOAT\n              | STRING\n              | TRUE\n              | FALSE\n              | IDENTIFIERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'IDENTIFIER':([0,1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,27,28,29,30,31,32,33,34,],[3,3,-2,-5,-1,9,9,-19,-3,-10,-13,-14,-15,-16,-17,-18,9,9,9,9,9,9,9,-4,-6,-7,-8,-9,-11,-12,-20,]),'PRINT':([0,1,2,5,6,9,10,11,12,13,14,15,16,17,27,28,29,30,31,32,33,34,],[4,4,-2,-5,-1,-19,-3,-10,-13,-14,-15,-16,-17,-18,-4,-6,-7,-8,-9,-11,-12,-20,]),'COMMENT':([0,1,2,5,6,9,10,11,12,13,14,15,16,17,27,28,29,30,31,32,33,34,],[5,5,-2,-5,-1,-19,-3,-10,-13,-14,-15,-16,-17,-18,-4,-6,-7,-8,-9,-11,-12,-20,]),'$end':([1,2,5,6,9,10,11,12,13,14,15,16,17,27,28,29,30,31,32,33,34,],[0,-2,-5,-1,-19,-3,-10,-13,-14,-15,-16,-17,-18,-4,-6,-7,-8,-9,-11,-12,-20,]),'EQUALS':([3,],[7,]),'LPAREN':([4,7,8,18,20,21,22,23,24,25,],[8,18,18,18,18,18,18,18,18,18,]),'NUMBER':([7,8,18,20,21,22,23,24,25,],[13,13,13,13,13,13,13,13,13,]),'FLOAT':([7,8,18,20,21,22,23,24,25,],[14,14,14,14,14,14,14,14,14,]),'STRING':([7,8,18,20,21,22,23,24,25,],[15,15,15,15,15,15,15,15,15,]),'TRUE':([7,8,18,20,21,22,23,24,25,],[16,16,16,16,16,16,16,16,16,]),'FALSE':([7,8,18,20,21,22,23,24,25,],[17,17,17,17,17,17,17,17,17,]),'TIMES':([9,11,12,13,14,15,16,17,28,29,30,31,32,33,34,],[-19,24,-13,-14,-15,-16,-17,-18,24,24,24,24,-11,-12,-20,]),'DIVIDE':([9,11,12,13,14,15,16,17,28,29,30,31,32,33,34,],[-19,25,-13,-14,-15,-16,-17,-18,25,25,25,25,-11,-12,-20,]),'PLUS':([9,10,11,12,13,14,15,16,17,19,26,28,29,30,31,32,33,34,],[-19,20,-10,-13,-14,-15,-16,-17,-18,20,20,-6,-7,-8,-9,-11,-12,-20,]),'MINUS':([9,10,11,12,13,14,15,16,17,19,26,28,29,30,31,32,33,34,],[-19,21,-10,-13,-14,-15,-16,-17,-18,21,21,-6,-7,-8,-9,-11,-12,-20,]),'AND':([9,10,11,12,13,14,15,16,17,19,26,28,29,30,31,32,33,34,],[-19,22,-10,-13,-14,-15,-16,-17,-18,22,22,-6,-7,-8,-9,-11,-12,-20,]),'OR':([9,10,11,12,13,14,15,16,17,19,26,28,29,30,31,32,33,34,],[-19,23,-10,-13,-14,-15,-16,-17,-18,23,23,-6,-7,-8,-9,-11,-12,-20,]),'RPAREN':([9,11,12,13,14,15,16,17,19,26,28,29,30,31,32,33,34,],[-19,-10,-13,-14,-15,-16,-17,-18,27,34,-6,-7,-8,-9,-11,-12,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,6,]),'expression':([7,8,18,],[10,19,26,]),'term':([7,8,18,20,21,22,23,],[11,11,11,28,29,30,31,]),'factor':([7,8,18,20,21,22,23,24,25,],[12,12,12,12,12,12,12,32,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',6),
  ('statements -> statement','statements',1,'p_statements','parser.py',7),
  ('statement -> IDENTIFIER EQUALS expression','statement',3,'p_statement_assign','parser.py',15),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_assign','parser.py',16),
  ('statement -> COMMENT','statement',1,'p_statement_comment','parser.py',24),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','parser.py',29),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','parser.py',30),
  ('expression -> expression AND term','expression',3,'p_expression_binop','parser.py',31),
  ('expression -> expression OR term','expression',3,'p_expression_binop','parser.py',32),
  ('expression -> term','expression',1,'p_expression_term','parser.py',43),
  ('term -> term TIMES factor','term',3,'p_term_binop','parser.py',47),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','parser.py',48),
  ('term -> factor','term',1,'p_term_factor','parser.py',55),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',59),
  ('factor -> FLOAT','factor',1,'p_factor_number','parser.py',60),
  ('factor -> STRING','factor',1,'p_factor_number','parser.py',61),
  ('factor -> TRUE','factor',1,'p_factor_number','parser.py',62),
  ('factor -> FALSE','factor',1,'p_factor_number','parser.py',63),
  ('factor -> IDENTIFIER','factor',1,'p_factor_number','parser.py',64),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',69),
]
