
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftGTLTGELEEQNEleftPLUSMINUSleftTIMESDIVIDEAND COLON COMMA COMMENT DEF DIVIDE DIVIDE_EQUALS ELSE EQ EQUALS FALSE FLOAT FOR GE GT IDENTIFIER IF IN LE LPAREN LT MINUS MINUS_EQUALS NE NUMBER OR PLUS PLUS_EQUALS PRINT RPAREN STRING TIMES TIMES_EQUALS TRUE WHILEstatements : statements statement\n                  | statementstatement : IDENTIFIER EQUALS expression\n                 | PRINT LPAREN expression RPARENstatement : COMMENTexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression AND term\n                  | expression OR term\n                  | expression GT term\n                  | expression LT term\n                  | expression GE term\n                  | expression LE term\n                  | expression EQ term\n                  | expression NE termexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : NUMBER\n              | FLOAT\n              | STRING\n              | TRUE\n              | FALSE\n              | IDENTIFIERfactor : LPAREN expression RPARENfactor : IDENTIFIER LPAREN args RPARENargs : expression COMMA args\n            | expression\n            | emptystatement : IF expression COLON statements ELSE COLON statements\n                 | IF expression COLON statementsstatement : WHILE expression COLON statementsstatement : FOR IDENTIFIER IN expression COLON statementsstatement : DEF IDENTIFIER LPAREN params RPAREN COLON statementsparams : IDENTIFIER COMMA params\n              | IDENTIFIER\n              | emptyempty :'
    
_lr_action_items = {'IDENTIFIER':([0,1,2,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,71,72,73,75,77,79,80,81,],[3,3,-2,-5,21,21,24,25,-1,21,21,-16,-19,-20,-21,-22,-23,-24,-25,21,-3,3,21,21,21,21,21,21,21,21,21,21,21,21,21,3,21,66,-4,3,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,3,-27,21,3,66,3,3,3,3,3,]),'PRINT':([0,1,2,5,10,14,15,16,17,18,19,20,21,26,28,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,72,75,77,79,80,81,],[4,4,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,4,4,-4,4,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,4,-27,4,4,4,4,4,4,]),'COMMENT':([0,1,2,5,10,14,15,16,17,18,19,20,21,26,28,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,72,75,77,79,80,81,],[5,5,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,5,5,-4,5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,5,-27,5,5,5,5,5,5,]),'IF':([0,1,2,5,10,14,15,16,17,18,19,20,21,26,28,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,72,75,77,79,80,81,],[6,6,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,6,6,-4,6,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,6,-27,6,6,6,6,6,6,]),'WHILE':([0,1,2,5,10,14,15,16,17,18,19,20,21,26,28,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,72,75,77,79,80,81,],[7,7,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,7,7,-4,7,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,7,-27,7,7,7,7,7,7,]),'FOR':([0,1,2,5,10,14,15,16,17,18,19,20,21,26,28,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,72,75,77,79,80,81,],[8,8,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,8,8,-4,8,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,8,-27,8,8,8,8,8,8,]),'DEF':([0,1,2,5,10,14,15,16,17,18,19,20,21,26,28,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,72,75,77,79,80,81,],[9,9,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,9,9,-4,9,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,9,-27,9,9,9,9,9,9,]),'$end':([1,2,5,10,14,15,16,17,18,19,20,21,26,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,77,80,81,],[0,-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,-4,-32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,-33,-27,-34,-31,-35,]),'ELSE':([2,5,10,14,15,16,17,18,19,20,21,26,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,70,77,80,81,],[-2,-5,-1,-16,-19,-20,-21,-22,-23,-24,-25,-3,-4,69,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,-33,-27,-34,-31,-35,]),'EQUALS':([3,],[11,]),'LPAREN':([4,6,7,11,12,21,22,25,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[12,22,22,22,22,41,22,45,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'NUMBER':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FLOAT':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'STRING':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'TRUE':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'FALSE':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'COLON':([13,14,15,16,17,18,19,20,21,23,48,49,50,51,52,53,54,55,56,57,58,59,63,65,69,70,74,],[28,-16,-19,-20,-21,-22,-23,-24,-25,43,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-26,72,75,-27,79,]),'PLUS':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[29,-16,-19,-20,-21,-22,-23,-24,-25,29,29,29,29,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,29,-26,29,-27,]),'MINUS':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[30,-16,-19,-20,-21,-22,-23,-24,-25,30,30,30,30,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,30,-26,30,-27,]),'AND':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[31,-16,-19,-20,-21,-22,-23,-24,-25,31,31,31,31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,31,-26,31,-27,]),'OR':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[32,-16,-19,-20,-21,-22,-23,-24,-25,32,32,32,32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,32,-26,32,-27,]),'GT':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[33,-16,-19,-20,-21,-22,-23,-24,-25,33,33,33,33,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,33,-26,33,-27,]),'LT':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[34,-16,-19,-20,-21,-22,-23,-24,-25,34,34,34,34,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,34,-26,34,-27,]),'GE':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[35,-16,-19,-20,-21,-22,-23,-24,-25,35,35,35,35,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,35,-26,35,-27,]),'LE':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[36,-16,-19,-20,-21,-22,-23,-24,-25,36,36,36,36,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,36,-26,36,-27,]),'EQ':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[37,-16,-19,-20,-21,-22,-23,-24,-25,37,37,37,37,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,37,-26,37,-27,]),'NE':([13,14,15,16,17,18,19,20,21,23,26,27,42,48,49,50,51,52,53,54,55,56,57,58,59,61,63,65,70,],[38,-16,-19,-20,-21,-22,-23,-24,-25,38,38,38,38,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,38,-26,38,-27,]),'RPAREN':([14,15,16,17,18,19,20,21,27,41,42,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,70,71,73,76,78,],[-16,-19,-20,-21,-22,-23,-24,-25,46,-39,63,-39,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,70,-29,-30,-26,-37,74,-38,-27,-39,-39,-28,-36,]),'COMMA':([14,15,16,17,18,19,20,21,48,49,50,51,52,53,54,55,56,57,58,59,61,63,66,70,],[-16,-19,-20,-21,-22,-23,-24,-25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,71,-26,73,-27,]),'TIMES':([14,15,16,17,18,19,20,21,48,49,50,51,52,53,54,55,56,57,58,59,63,70,],[39,-19,-20,-21,-22,-23,-24,-25,39,39,39,39,39,39,39,39,39,39,-17,-18,-26,-27,]),'DIVIDE':([14,15,16,17,18,19,20,21,48,49,50,51,52,53,54,55,56,57,58,59,63,70,],[40,-19,-20,-21,-22,-23,-24,-25,40,40,40,40,40,40,40,40,40,40,-17,-18,-26,-27,]),'IN':([24,],[44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,28,43,72,75,79,],[1,47,64,77,80,81,]),'statement':([0,1,28,43,47,64,72,75,77,79,80,81,],[2,10,2,2,10,10,2,2,10,2,10,10,]),'expression':([6,7,11,12,22,41,44,71,],[13,23,26,27,42,61,65,61,]),'term':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,41,44,71,],[14,14,14,14,14,48,49,50,51,52,53,54,55,56,57,14,14,14,]),'factor':([6,7,11,12,22,29,30,31,32,33,34,35,36,37,38,39,40,41,44,71,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,58,59,15,15,15,]),'args':([41,71,],[60,76,]),'empty':([41,45,71,73,],[62,68,62,68,]),'params':([45,73,],[67,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',17),
  ('statements -> statement','statements',1,'p_statements','parser.py',18),
  ('statement -> IDENTIFIER EQUALS expression','statement',3,'p_statement_assign_or_print','parser.py',27),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_assign_or_print','parser.py',28),
  ('statement -> COMMENT','statement',1,'p_statement_comment','parser.py',36),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','parser.py',42),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','parser.py',43),
  ('expression -> expression AND term','expression',3,'p_expression_binop','parser.py',44),
  ('expression -> expression OR term','expression',3,'p_expression_binop','parser.py',45),
  ('expression -> expression GT term','expression',3,'p_expression_binop','parser.py',46),
  ('expression -> expression LT term','expression',3,'p_expression_binop','parser.py',47),
  ('expression -> expression GE term','expression',3,'p_expression_binop','parser.py',48),
  ('expression -> expression LE term','expression',3,'p_expression_binop','parser.py',49),
  ('expression -> expression EQ term','expression',3,'p_expression_binop','parser.py',50),
  ('expression -> expression NE term','expression',3,'p_expression_binop','parser.py',51),
  ('expression -> term','expression',1,'p_expression_term','parser.py',60),
  ('term -> term TIMES factor','term',3,'p_term_binop','parser.py',64),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','parser.py',65),
  ('term -> factor','term',1,'p_term_factor','parser.py',70),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',74),
  ('factor -> FLOAT','factor',1,'p_factor_number','parser.py',75),
  ('factor -> STRING','factor',1,'p_factor_number','parser.py',76),
  ('factor -> TRUE','factor',1,'p_factor_number','parser.py',77),
  ('factor -> FALSE','factor',1,'p_factor_number','parser.py',78),
  ('factor -> IDENTIFIER','factor',1,'p_factor_number','parser.py',79),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',83),
  ('factor -> IDENTIFIER LPAREN args RPAREN','factor',4,'p_factor_call','parser.py',88),
  ('args -> expression COMMA args','args',3,'p_args','parser.py',92),
  ('args -> expression','args',1,'p_args','parser.py',93),
  ('args -> empty','args',1,'p_args','parser.py',94),
  ('statement -> IF expression COLON statements ELSE COLON statements','statement',7,'p_statement_if','parser.py',104),
  ('statement -> IF expression COLON statements','statement',4,'p_statement_if','parser.py',105),
  ('statement -> WHILE expression COLON statements','statement',4,'p_statement_while','parser.py',115),
  ('statement -> FOR IDENTIFIER IN expression COLON statements','statement',6,'p_statement_for','parser.py',120),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN COLON statements','statement',7,'p_statement_function','parser.py',125),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','parser.py',130),
  ('params -> IDENTIFIER','params',1,'p_params','parser.py',131),
  ('params -> empty','params',1,'p_params','parser.py',132),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',142),
]
